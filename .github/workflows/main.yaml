name: Provision Azure Infrastructure

on:
  workflow_dispatch:

jobs:
  provision-vms:
    runs-on: ubuntu-latest
    env:
      AZURE_RESOURCE_GROUP: 'pihole-dynatrace-rg'      # Change this to your desired resource group name
      AZURE_LOCATION: 'eastus'                         # Change this to your desired Azure region
      PIHOLE_VM_NAME: 'pihole-vm'                      # Change this to your desired Pi-hole VM name
      DYNATRACE_VM_NAME: 'dynatrace-vm'                # Change this to your desired Dynatrace VM name
      VM_USERNAME: 'nicolasnk'                             # Change this to your desired VM username

    steps:
      # Step 1: Check out the latest main branch
      - name: Checkout latest main
        uses: actions/checkout@v4
        with:
          ref: main

      # Step 2: Print workflow commit info
      - name: Show commit info
        run: |
          echo "Workflow triggered by commit: $GITHUB_SHA"
          echo "Checked out branch: main (latest)"

      # Step 3: Verify provisioning script
      - name: Verify provisioning script
        shell: pwsh
        run: |
          Write-Host "Top lines of Invoke-AzureProvisioning.ps1:"
          Get-Content ./Invoke-AzureProvisioning.ps1 | Select-Object -First 10

      # Step 4: Log in to Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 5: Run the PowerShell provisioning script
      - name: Run PowerShell provisioning script
        shell: pwsh
        run: |
          # The SSH key path is a placeholder. In a real scenario,
          # you would also store your SSH public key as a GitHub secret
          # and reference it here for a fully automated setup.
          ./Invoke-AzureProvisioning.ps1 -resourceGroupName $env:AZURE_RESOURCE_GROUP `
            -location $env:AZURE_LOCATION `
            -vmPiholeName $env:PIHOLE_VM_NAME `
            -vmDynatraceName $env:DYNATRACE_VM_NAME `
            -username $env:VM_USERNAME `
            -sshKeyContent '${{ secrets.SSH_PUBLIC_KEY }}'

      # Step 6: Install applications on the VMs
      - name: Get VM Public IPs
        id: get_ips
        run: |
          PIHOLE_IP=$(az network public-ip list --query "[?contains(name, '${{ env.PIHOLE_VM_NAME }}')].ipAddress" -o tsv)
          DYNATRACE_IP=$(az network public-ip list --query "[?contains(name, '${{ env.DYNATRACE_VM_NAME }}')].ipAddress" -o tsv)
          echo "PIHOLE_IP=$PIHOLE_IP" >> $GITHUB_ENV
          echo "DYNATRACE_IP=$DYNATRACE_IP" >> $GITHUB_ENV
          echo "Pi-hole VM IP: $PIHOLE_IP"
          echo "Dynatrace VM IP: $DYNATRACE_IP"

      - name: Install Pi-hole
        run: |
          pwsh -File ./provision-pihole-dynatrace.ps1 -VmPublicIp "${{ env.PIHOLE_IP }}" -VmUsername "${{ env.VM_USERNAME }}" -SshPrivateKeyPath "~/.ssh/id_rsa"

      - name: Install Dynatrace
        run: |
          pwsh -File ./provision-pihole-dynatrace.ps1 -VmPublicIp "${{ env.DYNATRACE_IP }}" -VmUsername "${{ env.VM_USERNAME }}" -SshPrivateKeyPath "~/.ssh/id_rsa"

      - name: Clean up resources (optional but recommended)
        if: always()
        run: |
          az group delete --name "${{ env.AZURE_RESOURCE_GROUP }}" --yes --no-wait
